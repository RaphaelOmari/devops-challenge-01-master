version: '3.8'

services:
  db:
    image: mysql:8
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: my_root_password        # Root password
      MYSQL_DATABASE: releases_db                  # Default database for app
      MYSQL_USER: app_user                         # MySQL limited user
      MYSQL_PASSWORD: ${DB_PASSWORD}               # MySQL user password from .env
    ports:
      - "3306:3306"                                # Expose MySQL port for connections
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d        # Mount SQL files to initialize the database
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    build: .
    container_name: node_app
    environment:
      DB_HOST: db                                  # MySQL service hostname
      DB_USER: ${DB_USER}                          # MySQL limited user
      DB_PASSWORD: ${DB_PASSWORD}                  # MySQL user password
      DB_DATABASE: ${DB_DATABASE}                  # Target database
      DB_PORT: 3306                                # Ensure app connects to the correct MySQL port
      API_KEY: ${API_KEY}                          # API Key for authentication
    ports:
      - "3000:3000"                                # Expose Node.js app port
    depends_on:
      db:
        condition: service_healthy
                                      
    networks:
      - app-network
    # Use wait-for-it.sh to wait for MySQL to be ready before starting the app
    command: ["./wait-for-it.sh", "db:3306", "--", "npm", "start"]
    restart: unless-stopped  

networks:
  app-network:                                     # Define the app-network
    driver: bridge